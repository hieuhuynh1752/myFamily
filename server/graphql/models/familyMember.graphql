type FamilyMember{
    id: ID!
    user: User @belongsTo
    family: Family @belongsTo
    role: String!
    created_at: DateTime!
    updated_at: DateTime!
    comments: [Comment!]! @hasMany
    events: [Event!]! @hasMany
    invites: [Invite!]! @hasMany
    likes: [Like!]! @hasMany
    posts: [Post!]! @hasMany
    toDos: [ToDo!]! @hasMany
    toDoLists: [ToDoList!]! @hasMany
}

extend type Mutation @guard(with: ["api"]) {
    createFamilyMember(input: CreateFamilyMemberInput! @spread): FamilyMember @create
}

input CreateFamilyMemberInput{
    user: CreateUserBelongsTo
    family: CreateFamilyBelongsTo
    role: String!
}

input CreateUserBelongsTo{
    connect: ID
    disconnect: Boolean
    delete: Boolean
}
input CreateFamilyBelongsTo{
    connect: ID
    disconnect: Boolean
    delete: Boolean
}
