type Event {
    id: ID!
    familyMember: FamilyMember @belongsTo
    title: String!
    description: String!
    start_date_time: DateTime!
    end_date_time: DateTime!
    color: String!
    recurrence: String!
    event_id: ID!
    reminder: String!
    created_at: DateTime!
    updated_at: DateTime!
}

extend type Mutation  @guard(with: ["api"]){
    createEvent(input: CreateEventInput! @spread): Event @create
    deleteEvent(id: ID!): Event @delete
    updateEvent(input: UpdateEventInput! @spread): Event @update
}

extend type Query @guard(with:["api"]){
    event(
        where: _ @whereConditions(columns: ["member_id"])
    ):[Event!]! @all
}

input CreateEventInput{
    familyMember: CreateFamilyMemberBelongsTo
    title: String!
    description: String!
    start_date_time: DateTime!
    end_date_time: DateTime!
    color: String
    recurrence: String
    event_id: ID
    reminder: String!
}

input UpdateEventInput{
    title: String!
    description: String!
    start_date_time: DateTime!
    end_date_time: DateTime!
    color: String
    recurrence: String
    event_id: ID
    reminder: String!
}
